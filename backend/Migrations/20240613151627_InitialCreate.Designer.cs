// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(RPSDbContext))]
    [Migration("20240613151627_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Record", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AIChoice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerChoice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RecordItems");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("UserItems");
                });

            modelBuilder.Entity("UserStats", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AceChoice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("DrawsAdvanced")
                        .HasColumnType("REAL");

                    b.Property<float>("DrawsBeginner")
                        .HasColumnType("REAL");

                    b.Property<float>("DrawsIntermediate")
                        .HasColumnType("REAL");

                    b.Property<int>("LongestStreak")
                        .HasColumnType("INTEGER");

                    b.Property<float>("LossesAdvanced")
                        .HasColumnType("REAL");

                    b.Property<float>("LossesBeginner")
                        .HasColumnType("REAL");

                    b.Property<float>("LossesIntermediate")
                        .HasColumnType("REAL");

                    b.Property<string>("NemesisChoice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayStyle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<float>("WinsAdvanced")
                        .HasColumnType("REAL");

                    b.Property<float>("WinsBeginner")
                        .HasColumnType("REAL");

                    b.Property<float>("WinsIntermediate")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("UserStatsItems");
                });

            modelBuilder.Entity("Record", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany("Records")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserStats", b =>
                {
                    b.HasOne("User", "User")
                        .WithOne("UserStats")
                        .HasForeignKey("UserStats", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("Records");

                    b.Navigation("UserStats")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
